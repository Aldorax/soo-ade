generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  password     String
  firstName    String
  middleName   String?
  lastName     String
  sex          String
  dateOfBirth  DateTime
  phone        String
  nationality  String        @default("Nigeria")
  role         String        @default("USER")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  application  Application?
  transactions Transaction[]
}

model Application {
  id                String        @id @default(cuid())
  certificateNumber String?       @unique
  status            Status        @default(PENDING)
  paymentStatus     PaymentStatus @default(UNPAID)
  userId            String        @unique
  localGovernment   String
  stateOfOrigin     String
  address           String
  nin               String
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  approvedAt        DateTime?
  approvedBy        String?
  rejectionReason   String?
  user              User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  documents         Document[]
  transaction       Transaction?
}

model Document {
  id            String      @id @default(cuid())
  name          String
  url           String
  applicationId String
  createdAt     DateTime    @default(now())
  application   Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
}

model Transaction {
  id             String            @id @default(cuid())
  amount         Float
  currency       String            @default("NGN")
  status         TransactionStatus
  reference      String            @unique
  paymentGateway String            @default("PAYSTACK")
  metadata       String?
  userId         String
  applicationId  String?           @unique
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  application    Application?      @relation(fields: [applicationId], references: [id])
  user           User              @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationCode {
  id        String   @id @default(cuid())
  code      String   @unique
  email     String
  createdAt DateTime @default(now())
  expiresAt DateTime
}

enum Role {
  USER
  ADMIN
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum PaymentStatus {
  UNPAID
  PAID
  REFUNDED
}

enum TransactionStatus {
  PENDING
  SUCCESS
  FAILED
  REFUNDED
}
